//Naive or Brute-Force Approach[Time Complexity=O(N)]

public class Basic{
	
     public static void main(String args[]) {
            int N=20,flag=1;
   
            for(int i=2;i<=N-1;i++) {
	    	   if(N%i==0) {
	    		flag=0;
	    		break;
	    	   }
	    }
      
         if(flag==1) {
      	    System.out.println(N+" is prime! ");
         }
         else {
      	    System.out.println(N+" is not prime! ");
         }
    
	  
     }    
}	





//Optimized Approach[Time Complexity=O(SquareRoot of N)]

public class Basic{
	
     public static void main(String args[]) {
            int N=20,flag=1;
   
            for(int i=2;i<=(int)Math.sqrt(N);i++) {
	    	   if(N%i==0) {
	    		flag=0;
	    		break;
	    	   }
	    }
      
         if(flag==1) {
      	    System.out.println(N+" is prime! ");
         }
         else {
      	    System.out.println(N+" is not prime! ");
         }
    
	  
     }    
}	